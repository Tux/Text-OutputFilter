.\" -*- mode: troff; coding: utf-8 -*-
.\" Automatically generated by Pod::Man 5.01 (Pod::Simple 3.45)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" \*(C` and \*(C' are quotes in nroff, nothing in troff, for use with C<>.
.ie n \{\
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "STDIN 1"
.TH STDIN 1 2024-01-04 "perl v5.38.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH NAME
OutputFilter \- Enable post processing of output without fork
.SH SYNOPSIS
.IX Header "SYNOPSIS"
.Vb 1
\& use Text::OutputFilter;
\&
\& my $bucket = "";
\& tie *STDOUT, "Text::OutputFilter";
\& tie *HANDLE, "Text::OutputFilter", 4;
\& tie *HANDLE, "Text::OutputFilter", 4,  *STDOUT;
\& tie *STDOUT, "Text::OutputFilter", 4, \e$bucket;
\& tie *OUTPUT, "Text::OutputFilter", 4,  *STDOUT, sub { "$_[0]" };
.Ve
.SH DESCRIPTION
.IX Header "DESCRIPTION"
This interface enables some post-processing on output streams,
like adding a left margin.
.PP
The tied filehandle is opened unbuffered, but the output is line
buffered. The \f(CW\*(C`tie\*(C'\fR takes three optional arguments:
.IP "Left Margin" 4
.IX Item "Left Margin"
The left margin must be a positive integer and defaults to \f(CW4\fR spaces.
.IP "Output Stream" 4
.IX Item "Output Stream"
The output stream must be an already open stream, with writing
enabled. The default is \f(CW*STDOUT\fR. All input methods on the new
stream are disabled. If a reference to a scalar is passed, it will
be opened as PerlIO::scalar \- in-memory IO, scalar IO. No checks
performed to see if your perl supports it. If you want it, and your
perl does not, upgrade.
.Sp
Using \f(CW\*(C`binmode ()\*(C'\fR on the new stream is allowed and supported.
.Sp
OPEN, SEEK, and WRITE are not (yet) implemented.
.IP "Line Modifying Function" 4
.IX Item "Line Modifying Function"
The output is line buffered, to enable line-modifier functions.
The line (without newline) is passed as the only argument to the
sub-ref, whose output is printed after the prefix from the first
argument. A newline is printed after the sub-ref's output.
.Sp
To \fBfilter\fR a line, as in \fIremove\fR it from the stream, make the
sub return \fIundef\fR.
.SH TODO
.IX Header "TODO"
Tests, tests, tests.
Tests with older perls
.SH AUTHOR
.IX Header "AUTHOR"
H.Merijn Brand <h.m.brand@procura.nl>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
Copyright (C) 2006\-2024 H.Merijn Brand for PROCURA B.V.
.PP
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBperl\fR\|(1), \fBperlopen\fR\|(1), 'open STDOUT, "|\-"', Text::Filter
